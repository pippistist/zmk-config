#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// changed lwr and rse

#define DEF 0
#define GAM 1
#define RSE 2
#define LWR 3
#define ADJ 4
#define FN  5

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB      &kp Q           &kp W           &kp E        &kp R        &kp T          &kp Y       &kp U      &kp I      &kp O    &kp P          &kp SQT
&lt 1 LCTRL  &kp A           &kp S           &kp D        &kp F        &kp G          &kp H       &kp J      &kp K      &kp L    &kp BACKSLASH
&kp LSHFT    &kp Z           &kp X           &kp C        &kp V        &kp B          &kp N       &kp M      &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL    &lt 5 LEFT_WIN  &lt 2 LEFT_ALT  &lt 0 SPACE  &lt 4 SPACE  &kp RIGHT_ALT  &lt 8 RGUI  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        ctrl_layer {
            bindings = <
&kt LC(Y)  &kt LC(Z)  &kt LC(X)  &kt LC(C)  &kt LC(V)  &trans  &kt PAGE_UP    &kt LC(LEFT)  &kt UP    &kt LC(RIGHT)  &kt DELETE     &kt ESCAPE
&trans     &trans     &trans     &trans     &trans     &trans  &kt PAGE_DOWN  &kt LEFT      &kt DOWN  &kt RIGHT      &kt BACKSPACE
&trans     &trans     &trans     &trans     &trans     &trans  &kt HOME       &kp END       &trans    &trans         &trans
&trans     &trans     &trans     &trans     &trans     &trans  &trans         &trans
            >;
        };

        alt_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &kt LS(PAGE_UP)    &kt LS(LC(LEFT))  &kt LS(UP)    &kt LS(LC(RIGHT))  &trans     &kt BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans  &kt LS(PAGE_DOWN)  &kt LS(LEFT)      &kt LS(DOWN)  &kt LS(RIGHT)      &kt ENTER
&trans  &trans  &trans  &trans  &trans  &trans  &kt LS(HOME)       &kt LS(END)       &trans        &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans             &kt DELETE
            >;
        };

        symbol {
            bindings = <
&kt ESCAPE  &kt LEFT_BRACE        &kt RIGHT_BRACE        &kt LEFT_BRACKET  &kt RIGHT_BRACKET  &kt HASH         &kt PERCENT       &kt PLUS     &kt MINUS  &kt ASTERISK  &kt SLASH   &kt GRAVE
&kt ENTER   &kt LEFT_PARENTHESIS  &kt RIGHT_PARENTHESIS  &kt CARET         &kt UNDERSCORE     &kt LESS_THAN    &kt GREATER_THAN  &kt EQUAL    &kt COMMA  &kt PERIOD    &kt DOLLAR
&trans      &trans                &trans                 &kt TILDE         &kt PIPE           &kt EXCLAMATION  &kt AMPERSAND     &kt AT_SIGN  &trans     &trans        &trans
&trans      &trans                &trans                 &mo 7             &trans             &trans           &trans            &trans
            >;
        };

        number {
            bindings = <
&kt ESCAPE  &kt NUMBER_1  &kt NUMBER_2  &kt NUMBER_3  &kt NUMBER_4  &kt NUMBER_5  &kt NUMBER_6  &kt NUMBER_7  &kt NUMBER_8  &kt NUMBER_9  &kt NUMBER_0   &kt GRAVE
&kt ENTER   &trans        &trans        &trans        &trans        &trans        &trans        &kt NUMBER_4  &kt NUMBER_5  &kt NUMBER_6  &kt BACKSPACE
&trans      &trans        &trans        &trans        &trans        &trans        &kt NUMBER_0  &kt NUMBER_1  &kt NUMBER_2  &kt NUMBER_3  &kt DOT
&trans      &trans        &trans        &trans        &mo 7         &trans        &trans        &trans
            >;
        };

        media {
            bindings = <
&kt K_MUTE        &kt C_VOLUME_DOWN  &kt C_VOLUME_UP  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &kt LA(F4)
&kt K_PLAY_PAUSE  &kt C_PREVIOUS     &kt C_NEXT       &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans
&trans            &trans             &trans           &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans
&trans            &trans             &trans           &trans  &trans  &trans  &trans  &kt LC(LA(DELETE))
            >;
        };

        game {
            bindings = <
&kp TAB    &kp Q  &kp W           &kp E      &kp R      &kp T     &kp Y       &kp U      &kp I      &kp O    &kp P      &kp BSPC
&kp LCTRL  &kp A  &kp S           &kp D      &kp F      &kp G     &kp H       &kp J      &kp K      &kp L    &kp ENTER
&kp LSHFT  &kp Z  &kp X           &kp C      &kp V      &kp B     &kp N       &kp M      &kp COMMA  &kp DOT  &kp FSLH
&kp LCTRL  &mo 5  &lt 4 LEFT_ALT  &kp SPACE  &kp SPACE  &kp RALT  &lt 8 RGUI  &kp RCTRL
            >;
        };

        adjust_layer {
            bindings = <
&ext_power EXT_POWER_TOGGLE_CMD  &none            &none            &none            &none            &none            &none     &none            &none  &kp MINUS  &kp EQUAL  &none
&none                            &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &kp HOME  &none            &none  &kp END    &none
&none                            &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &none     &none            &none  &none      &none
&none                            &none            &none            &none            &none            &none            &none     &rgb_ug RGB_TOG
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        fn_layer {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7  &kp F8  &kp F9  &kp F10  &kp F11      &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none   &none   &none   &none    &sys_reset
&none       &out OUT_USB  &out OUT_BLE  &out OUT_TOG  &none         &none         &none   &none   &none   &none    &bootloader
&to 0       &to 6         &none         &none         &none         &none         &none   &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
