#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// changed lwr and rse

#define DEF 0
#define GAM 1
#define RSE 2
#define LWR 3
#define ADJ 4
#define FN  5

/ {
    behaviors {
        instant_layertap: instant_layertap {
            compatible = "zmk,behavior-hold-tap";
            label = "INSTANT_LAYERTAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <5000>;
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB           &kp Q         &kp W         &kp E  &kp R                      &kp T          &kp Y          &kp U      &kp I      &kp O    &kp P      &kp SQT
&mo 4             &kp A         &kp S         &kp D  &kp F                      &kp G          &kp H          &kp J      &kp K      &kp L    &kp SEMI
&kp LSHFT         &kp Z         &kp X         &kp C  &kp V                      &kp B          &kp N          &kp M      &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 2  &instant_layertap 1 SPACE  &kp RIGHT_ALT  &kp RIGHT_GUI  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        symbol_layer {
            bindings = <
&none  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp HASH         &kp PERCENT       &kp KP_PLUS    &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_DOT
&none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET         &kp UNDERSCORE     &kp LESS_THAN    &kp GREATER_THAN  &kp EQUAL      &kp COMMA     &kp PERIOD       &kp COLON
&none  &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES      &kp TILDE         &kp PIPE           &kp EXCLAMATION  &kp AT            &kp AMPERSAND  &kp GRAVE     &kp SEMICOLON    &kp QUESTION
&none  &none                 &kp DOLLAR             &kp BACKSLASH     &none              &none            &none             &none
            >;
        };

        function_layer {
            bindings = <
&none  &kp TAB  &none  &kp LEFT_GUI      &kp LEFT_ALT    &kp ESC    &kp PAGE_UP    &kp HOME      &kp UP    &kp END        &kp DEL        &kp ESC
&mo 5  &mo 3    &none  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp ENTER  &kp PAGE_DOWN  &kp LEFT      &kp DOWN  &kp RIGHT      &kp BACKSPACE
&none  &kp TAB  &none  &none             &none           &none      &none          &kp LC(LEFT)  &none     &kp LC(RIGHT)  &kp ENTER
&none  &none    &none  &none             &none           &none      &none          &none
            >;
        };

        number_layer {
            bindings = <
&none  &none  &kp F1  &kp F2   &kp F3     &kp F4   &kp PERCENT   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0   &kp GRAVE
&none  &none  &kp F5  &kp F6   &kp F7     &kp F8   &none         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp BACKSPACE
&none  &none  &kp F9  &kp F10  &kp F11    &kp F12  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DOT
&none  &none  &none   &none    &kp SPACE  &none    &none         &none
            >;
        };

        shortcut_layer {
            bindings = <
&none  &kp LS(TAB)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(SLASH)  &none  &none  &none  &none  &none  &none
&none  &kp LC(A)    &kp LC(S)  &kp LA(A)  &kp LC(F)  &kp LA(S)      &none  &none  &none  &none  &none
&none  &kp LC(Z)    &kp LC(Y)  &none      &none      &kp LG(L)      &none  &none  &none  &none  &none
&none  &none        &none      &none      &none      &none          &none  &none
            >;
        };

        fn_layer {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none  &none  &none        &none
&none  &out OUT_USB  &out OUT_BLE  &out OUT_TOG  &none         &none         &none  &none  &none  &none  &sys_reset
&none  &bt BT_CLR    &none         &none         &none         &none         &none  &none  &none  &none  &bootloader
&none  &none         &none         &none         &none         &none         &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        game {
            bindings = <
&kp TAB       &kp Q  &kp W         &kp E      &kp R      &kp T     &kp Y          &kp U      &kp I      &kp O    &kp P      &kp BSPC
&kp CAPSLOCK  &kp A  &kp S         &kp D      &kp F      &kp G     &kp H          &kp J      &kp K      &kp L    &kp ENTER
&kp LSHFT     &kp Z  &kp X         &kp C      &kp V      &kp B     &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH
&kp LCTRL     &mo 7  &kp LEFT_ALT  &kp SPACE  &kp SPACE  &kp RALT  &kp RIGHT_GUI  &kp RCTRL
            >;
        };

        game_layer2 {
            bindings = <
&kp ESCAPE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp GRAVE
&trans      &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans        &trans
            >;
        };
    };
};
